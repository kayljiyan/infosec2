@page "/register"
@rendermode InteractiveServer
@inject IJSRuntime JS
@inject NavigationManager NM
@using Newtonsoft.Json
@using client.Schemas
@using System.Text
@using System.Net.Http

<title>Register</title>
<style>
    img {
        border-radius: 50%;
    }

    .custom-btn:hover {
        background-color: white;
        color: green;
    }

    .second-btn:hover {
        background-color: green;
        color: white;
    }

    .bg-image {
        position: relative;
        background-image: url('images/greenbg.png');
        background-size: cover;
        background-position: center;
        background-repeat: no-repeat;
        height: 100vh;
    }

        .bg-image::before {
            content: '';
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.5);
        }

        .bg-image .container {
            position: relative;
            z-index: 2;
        }

</style>

<section class="bg-image py-3 py-md-5 full-height">
    <div class="container">
        <div class="row justify-content-center">
            <div class="col-12 col-sm-10 col-md-8 col-lg-6 col-xl-5 col-xxl-4">
                <div class="card border border-light-subtle rounded-3 shadow-sm">
                    <div class="card-body p-3 p-md-4 p-xl-5">
                     
                        <h2 class="fs-6 fw-bold text-center text-secondary mb-4">Create your Account</h2>
                        <div class="row gy-2 overflow-hidden">
                            <form>
                                <div class="form-group">
                                    <label>Email address</label>
                                    <input type="email" class="form-control mb-3" placeholder="Enter your email..." @bind="user_email">
                                </div>
                                <div class="form-group">
                                    <label>First name</label>
                                    <input type="text" class="form-control mb-3" placeholder="Enter your first name..." @bind="user_fname">
                                </div>
                                <div class="form-group">
                                    <label>Last name</label>
                                    <input type="text" class="form-control mb-3" placeholder="Enter your last name..." @bind="user_lname">
                                </div>
                                <div class="form-group">
                                    <label>Password</label>
                                    <input type="password" class="form-control mb-3" placeholder="Enter your password..." @bind="user_password">
                                </div>
                                <div class="form-group">
                                    <label>Confirm password</label>
                                    <input type="password" class="form-control mb-3" placeholder="Confirm your password..." @bind="confirm_password">
                                </div>
                            </form>
                            <div class="col-12">
                                <div class="d-grid my-3">
                                    <a class="btn btn-success rounded-pill custom-btn mb-3" @onclick="() => RegisterUser(user_fname, user_lname, user_password, confirm_password, user_email)">Register</a>
                                    <a href="/login" class="text-success text-center">Back to Login</a>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>
            </div>
        </div>
    </div>
</section>

@code
{
    public string? user_fname { get; set; }
    public string? user_lname { get; set; }
    public string? user_email { get; set; }
    public string? user_password { get; set; }
    public string? confirm_password { get; set; }


    public async Task RegisterUser(string user_fname, string user_lname, string user_password, string confirm_password, string user_email)
    {
        using (var http = new HttpClient())
        {
            if (!string.IsNullOrWhiteSpace(user_email) && !string.IsNullOrWhiteSpace(user_password) && !string.IsNullOrWhiteSpace(user_fname) && !string.IsNullOrWhiteSpace(user_lname))
            {
                if (user_password == confirm_password)
                {
                    var user = new Dictionary<string, string>{
                        { "user_fname", user_fname },
                        { "user_lname", user_lname },
                        { "user_password", user_password },
                        { "user_email", user_email },
                        { "user_role", "user" }
                    };
                    var UserJSON = JsonConvert.SerializeObject(user);
                    HttpContent postparams = new StringContent(UserJSON, Encoding.UTF8, "application/json");
                    var response = await http.PostAsync("http://127.0.0.1:8000/api/v1/register", postparams);
                    var responsebody = await response.Content.ReadAsStringAsync();
                    try
                    {
                        response.EnsureSuccessStatusCode();
                        var detail = JsonConvert.DeserializeObject<Detail>(responsebody);
                        Console.WriteLine(detail.detail);
                        NM.NavigateTo("login");
                    } catch (Exception e) {
                        var detail = JsonConvert.DeserializeObject<Detail>(responsebody);
                        Console.WriteLine(detail.detail);
                    }
                } else {
                    Console.WriteLine("passwords don't match");
                }
            } else {
                Console.WriteLine("missing credentials");
            }
        }
    }
}